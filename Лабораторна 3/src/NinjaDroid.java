public class NinjaDroid extends Droid {
    private static final int NINJA_HEALTH = 90;
    private static final int NINJA_DAMAGE = 22;
    private int dodgeChance = 40; // 40% —à–∞–Ω—Å —É—Ö–∏–ª–∏—Ç–∏—Å—è
    private int splashDamage = 10; // –î–æ–¥–∞—Ç–∫–æ–≤–∞ —à–∫–æ–¥–∞ –≤—ñ–¥ —Å–ø–ª–µ—à—É

    public NinjaDroid(String name) {
        super(name, NINJA_HEALTH, NINJA_DAMAGE);
    }

    @Override
    public void takeDamage(int damage) {
        // –®–∞–Ω—Å —É—Ö–∏–ª–∏—Ç–∏—Å—è –≤—ñ–¥ –∞—Ç–∞–∫–∏
        boolean dodged = Math.random() * 100 < dodgeChance;
        if (dodged) {
            System.out.println("  ‚ö° " + name + " –º–∞–π—Å—Ç–µ—Ä–Ω–æ —É—Ö–∏–ª—è—î—Ç—å—Å—è –≤—ñ–¥ —É–¥–∞—Ä—É!");
            return;
        }
        super.takeDamage(damage);
    }

    @Override
    public String attack(Droid target) {
        // –ó–≤–∏—á–∞–π–Ω–∞ –∞—Ç–∞–∫–∞
        target.takeDamage(damage);
        String result = String.format("%s —à–≤–∏–¥–∫–æ –∞—Ç–∞–∫—É—î %s –Ω–∞ %d —à–∫–æ–¥–∏", 
            name, target.getName(), damage);

        // 30% —à–∞–Ω—Å —Å–ø–ª–µ—à-–∞—Ç–∞–∫–∏ (–¥–æ–¥–∞—Ç–∫–æ–≤–∞ —à–∫–æ–¥–∞)
        if (Math.random() * 100 < 30) {
            target.takeDamage(splashDamage);
            result += String.format(" + –°–ü–õ–ï–® –Ω–∞ %d —à–∫–æ–¥–∏! üí•", splashDamage);
        }

        return result;
    }

    @Override
    public String getType() {
        return "–ù—ñ–Ω–¥–∑—è";
    }

    @Override
    public String getColor() {
        return Colors.PURPLE;
    }
}
